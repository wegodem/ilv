DEFINITION MODULE MatrixMathLib;

EXPORT QUALIFIED CMatCommutator,CMatAdd,CMatMultAdd,CMatRMultAdd,
                 CMatMult,CMatZero,ShowCMatElements,CopyCMatrix,
                 RMultCMat,CMultCMat,ExpectationValue,CalcTrace,
                 DoRotation,ExpMatrix,Adjungate,DoSpectrum,
                 NormCMatrix,CMatrix,COMPLEXLONGREAL,TwoDiagonal;

CONST Nstmax = 16;                 
TYPE  CMatrix = ARRAY[1..Nstmax],[1..Nstmax],[1..2] OF REAL;
      COMPLEXLONGREAL = ARRAY[1..2] OF REAL;
      TwoDiagonal = ARRAY[1..2],[1..100] OF REAL;
      Diagonal = ARRAY[1..Nstmax] OF REAL;
      CDiagonal = ARRAY[1..Nstmax],[1..2] OF REAL; 

PROCEDURE CMatCommutator(n:INTEGER;a:CMatrix;b:CMatrix;
                         VAR outmat:CMatrix);
PROCEDURE CMatAdd(n:INTEGER;inmat1:CMatrix;inmat2: CMatrix;
                  VAR outmat: CMatrix);
PROCEDURE CMatMultAdd(n:INTEGER;inmat1:CMatrix;mult1:COMPLEXLONGREAL;
                     inmat2: CMatrix;mult2:COMPLEXLONGREAL;
                     VAR outmat: CMatrix);
PROCEDURE CMatRMultAdd(n:INTEGER;inmat1:CMatrix;mult1:REAL;
                       inmat2: CMatrix;mult2:REAL;
                       VAR outmat: CMatrix);
PROCEDURE CMatMult(n: INTEGER;mat1: CMatrix;mat2: CMatrix;
                   VAR outmat: CMatrix);
PROCEDURE CMatZero(n:INTEGER;inmat:CMatrix;VAR outmat:CMatrix);
PROCEDURE ShowCMatElements(n:INTEGER;smat:CMatrix);
PROCEDURE CopyCMatrix(n:INTEGER;inmat:CMatrix;VAR copy:CMatrix);
PROCEDURE RMultCMat(n:INTEGER;xx:REAL;inmat:CMatrix;
                    VAR outmat:CMatrix);
PROCEDURE CMultCMat(n:INTEGER;xx:COMPLEXLONGREAL;inmat:CMatrix;
                    VAR outmat:CMatrix);
PROCEDURE ExpectationValue(n:INTEGER;inmat,dmat:CMatrix;
                           VAR Eval: COMPLEXLONGREAL);
PROCEDURE CalcTrace(n : INTEGER;mat: CMatrix; VAR trace:REAL); 
PROCEDURE NormCMatrix(n: INTEGER; VAR mat: CMatrix); 
PROCEDURE ExpMatrix(n:INTEGER;inmat: CMatrix; h: REAL ; VAR outmat:CMatrix);
PROCEDURE DoRotation(n:INTEGER;inmat:CMatrix; VAR outmat:CMatrix);
PROCEDURE Adjungate(n:INTEGER;inmat:CMatrix; VAR outmat:CMatrix);
PROCEDURE DoSpectrum(n:INTEGER;densmat,Hmat,cohmat:CMatrix;
                     VAR csp,ssp:TwoDiagonal;VAR Ns,Nc:INTEGER);
END MatrixMathLib.